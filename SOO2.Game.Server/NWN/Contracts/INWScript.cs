// ReSharper disable once CheckNamespace
namespace NWN
{
    public interface INWScript
    {
        void AssignCommand(Object oActionSubject, ActionDelegate aActionToAssign);
        void DelayCommand(float fSeconds, ActionDelegate aActionToDelay);
        void ActionDoCommand(ActionDelegate aActionToDelay);
        int Random(int nMaxInteger);
        void PrintString(string sString);
        void PrintFloat(float fFloat, int nWidth = 18, int nDecimals = 9);
        string FloatToString(float fFloat, int nWidth = 18, int nDecimals = 9);
        void PrintInteger(int nInteger);
        void PrintObject(Object oObject);
        void ExecuteScript(string sScript, Object oTarget);
        void ClearAllActions(int nClearCombatState = NWScript.FALSE);
        void SetFacing(float fDirection);
        void SetCalendar(int nYear, int nMonth, int nDay);
        void SetTime(int nHour, int nMinute, int nSecond, int nMillisecond);
        int GetCalendarYear();
        int GetCalendarMonth();
        int GetCalendarDay();
        int GetTimeHour();
        int GetTimeMinute();
        int GetTimeSecond();
        int GetTimeMillisecond();
        void ActionRandomWalk();
        void ActionMoveToLocation(Location lDestination, int bRun = NWScript.FALSE);
        void ActionMoveToObject(Object oMoveTo, int bRun = NWScript.FALSE, float fRange = 1.0f);
        void ActionMoveAwayFromObject(Object oFleeFrom, int bRun = NWScript.FALSE, float fMoveAwayRange = 40.0f);
        Object GetArea(Object oTarget);
        Object GetEnteringObject();
        Object GetExitingObject();
        Vector GetPosition(Object oTarget);
        float GetFacing(Object oTarget);
        Object GetItemPossessor(Object oItem);
        Object GetItemPossessedBy(Object oCreature, string sItemTag);
        Object CreateItemOnObject(string sItemTemplate, Object oTarget = null, int nStackSize = 1, string sNewTag = "");
        void ActionEquipItem(Object oItem, int nInventorySlot);
        void ActionUnequipItem(Object oItem);
        void ActionPickUpItem(Object oItem);
        void ActionPutDownItem(Object oItem);
        Object GetLastAttacker(Object oAttackee = null);
        void ActionAttack(Object oAttackee, int bPassive = NWScript.FALSE);
        Object GetNearestCreature(int nFirstCriteriaType, int nFirstCriteriaValue, Object oTarget = null, int nNth = 1, int nSecondCriteriaType = -1, int nSecondCriteriaValue = -1, int nThirdCriteriaType = -1, int nThirdCriteriaValue = -1);
        void ActionSpeakString(string sStringToSpeak, int nTalkVolume = NWScript.TALKVOLUME_TALK);
        void ActionPlayAnimation(int nAnimation, float fSpeed = 1.0f, float fDurationSeconds = 0.0f);
        float GetDistanceToObject(Object oObject);
        int GetIsObjectValid(Object oObject);
        void ActionOpenDoor(Object oDoor);
        void ActionCloseDoor(Object oDoor);
        void SetCameraFacing(float fDirection, float fDistance = -1.0f, float fPitch = -1.0f, int nTransitionType = NWScript.CAMERA_TRANSITION_TYPE_SNAP);
        void PlaySound(string sSoundName);
        Object GetSpellTargetObject();
        void ActionCastSpellAtObject(int nSpell, Object oTarget, int nMetaMagic = NWScript.METAMAGIC_ANY, int bCheat = NWScript.FALSE, int nDomainLevel = 0, int nProjectilePathType = NWScript.PROJECTILE_PATH_TYPE_DEFAULT, int bInstantSpell = NWScript.FALSE);
        int GetCurrentHitPoints(Object oObject = null);
        int GetMaxHitPoints(Object oObject = null);
        int GetLocalInt(Object oObject, string sVarName);
        float GetLocalFloat(Object oObject, string sVarName);
        string GetLocalString(Object oObject, string sVarName);
        Object GetLocalObject(Object oObject, string sVarName);
        void SetLocalInt(Object oObject, string sVarName, int nValue);
        void SetLocalFloat(Object oObject, string sVarName, float fValue);
        void SetLocalString(Object oObject, string sVarName, string sValue);
        void SetLocalObject(Object oObject, string sVarName, Object oValue);
        int GetStringLength(string sString);
        string GetStringUpperCase(string sString);
        string GetStringLowerCase(string sString);
        string GetStringRight(string sString, int nCount);
        string GetStringLeft(string sString, int nCount);
        string InsertString(string sDestination, string sString, int nPosition);
        string GetSubString(string sString, int nStart, int nCount);
        int FindSubString(string sString, string sSubString, int nStart = 0);
        float fabs(float fValue);
        float cos(float fValue);
        float sin(float fValue);
        float tan(float fValue);
        float acos(float fValue);
        float asin(float fValue);
        float atan(float fValue);
        float log(float fValue);
        float pow(float fValue, float fExponent);
        float sqrt(float fValue);
        int abs(int nValue);
        Effect EffectHeal(int nDamageToHeal);
        Effect EffectDamage(int nDamageAmount, int nDamageType = NWScript.DAMAGE_TYPE_MAGICAL, int nDamagePower = NWScript.DAMAGE_POWER_NORMAL);
        Effect EffectAbilityIncrease(int nAbilityToIncrease, int nModifyBy);
        Effect EffectDamageResistance(int nDamageType, int nAmount, int nLimit = 0);
        Effect EffectResurrection();
        Effect EffectSummonCreature(string sCreatureResref, int nVisualEffectId = NWScript.VFX_NONE, float fDelaySeconds = 0.0f, int nUseAppearAnimation = 0);
        int GetCasterLevel(Object oCreature);
        Effect GetFirstEffect(Object oCreature);
        Effect GetNextEffect(Object oCreature);
        void RemoveEffect(Object oCreature, Effect eEffect);
        int GetIsEffectValid(Effect eEffect);
        int GetEffectDurationType(Effect eEffect);
        int GetEffectSubType(Effect eEffect);
        Object GetEffectCreator(Effect eEffect);
        string IntToString(int nInteger);
        Object GetFirstObjectInArea(Object oArea = null);
        Object GetNextObjectInArea(Object oArea = null);
        int d2(int nNumDice = 1);
        int d3(int nNumDice = 1);
        int d4(int nNumDice = 1);
        int d6(int nNumDice = 1);
        int d8(int nNumDice = 1);
        int d10(int nNumDice = 1);
        int d12(int nNumDice = 1);
        int d20(int nNumDice = 1);
        int d100(int nNumDice = 1);
        float VectorMagnitude(Vector? vVector);
        int GetMetaMagicFeat();
        int GetObjectType(Object oTarget);
        int GetRacialType(Object oCreature);
        int FortitudeSave(Object oCreature, int nDC, int nSaveType = NWScript.SAVING_THROW_TYPE_NONE, Object oSaveVersus = null);
        int ReflexSave(Object oCreature, int nDC, int nSaveType = NWScript.SAVING_THROW_TYPE_NONE, Object oSaveVersus = null);
        int WillSave(Object oCreature, int nDC, int nSaveType = NWScript.SAVING_THROW_TYPE_NONE, Object oSaveVersus = null);
        int GetSpellSaveDC();
        Effect MagicalEffect(Effect eEffect);
        Effect SupernaturalEffect(Effect eEffect);
        Effect ExtraordinaryEffect(Effect eEffect);
        Effect EffectACIncrease(int nValue, int nModifyType = NWScript.AC_DODGE_BONUS, int nDamageType = NWScript.AC_VS_DAMAGE_TYPE_ALL);
        int GetAC(Object oObject, int nForFutureUse = 0);
        Effect EffectSavingThrowIncrease(int nSave, int nValue, int nSaveType = NWScript.SAVING_THROW_TYPE_ALL);
        Effect EffectAttackIncrease(int nBonus, int nModifierType = NWScript.ATTACK_BONUS_MISC);
        Effect EffectDamageReduction(int nAmount, int nDamagePower, int nLimit = 0);
        Effect EffectDamageIncrease(int nBonus, int nDamageType = NWScript.DAMAGE_TYPE_MAGICAL);
        float RoundsToSeconds(int nRounds);
        float HoursToSeconds(int nHours);
        float TurnsToSeconds(int nTurns);
        int GetLawChaosValue(Object oCreature);
        int GetGoodEvilValue(Object oCreature);
        int GetAlignmentLawChaos(Object oCreature);
        int GetAlignmentGoodEvil(Object oCreature);
        Object GetFirstObjectInShape(int nShape, float fSize, Location lTarget, int bLineOfSight = NWScript.FALSE, int nObjectFilter = NWScript.OBJECT_TYPE_CREATURE, Vector? vOrigin = null);
        Object GetNextObjectInShape(int nShape, float fSize, Location lTarget, int bLineOfSight = NWScript.FALSE, int nObjectFilter = NWScript.OBJECT_TYPE_CREATURE, Vector? vOrigin = null);
        Effect EffectEntangle();
        void SignalEvent(Object oObject, Event evToRun);
        Event EventUserDefined(int nUserDefinedEventNumber);
        Effect EffectDeath(int nSpectacularDeath = NWScript.FALSE, int nDisplayFeedback = NWScript.TRUE);
        Effect EffectKnockdown();
        void ActionGiveItem(Object oItem, Object oGiveTo);
        void ActionTakeItem(Object oItem, Object oTakeFrom);
        Vector VectorNormalize(Vector? vVector);
        Effect EffectCurse(int nStrMod = 1, int nDexMod = 1, int nConMod = 1, int nIntMod = 1, int nWisMod = 1, int nChaMod = 1);
        int GetAbilityScore(Object oCreature, int nAbilityType, int nBaseAbilityScore = NWScript.FALSE);
        int GetIsDead(Object oCreature);
        void PrintVector(Vector? vVector, int bPrepend);
        Vector Vector(float x = 0.0f, float y = 0.0f, float z = 0.0f);
        void SetFacingPoint(Vector? vTarget);
        Vector AngleToVector(float fAngle);
        float VectorToAngle(Vector? vVector);
        int TouchAttackMelee(Object oTarget, int bDisplayFeedback = NWScript.TRUE);
        int TouchAttackRanged(Object oTarget, int bDisplayFeedback = NWScript.TRUE);
        Effect EffectParalyze();
        Effect EffectSpellImmunity(int nImmunityToSpell = NWScript.SPELL_ALL_SPELLS);
        Effect EffectDeaf();
        float GetDistanceBetween(Object oObjectA, Object oObjectB);
        void SetLocalLocation(Object oObject, string sVarName, Location lValue);
        Location GetLocalLocation(Object oObject, string sVarName);
        Effect EffectSleep();
        Object GetItemInSlot(int nInventorySlot, Object oCreature = null);
        Effect EffectCharmed();
        Effect EffectConfused();
        Effect EffectFrightened();
        Effect EffectDominated();
        Effect EffectDazed();
        Effect EffectStunned();
        void SetCommandable(int bCommandable, Object oTarget = null);
        int GetCommandable(Object oTarget = null);
        Effect EffectRegenerate(int nAmount, float fIntervalSeconds);
        Effect EffectMovementSpeedIncrease(int nPercentChange);
        int GetHitDice(Object oCreature);
        void ActionForceFollowObject(Object oFollow, float fFollowDistance = 0.0f);
        string GetTag(Object oObject);
        int ResistSpell(Object oCaster, Object oTarget);
        int GetEffectType(Effect eEffect);
        Effect EffectAreaOfEffect(int nAreaEffectId, string sOnEnterScript = "", string sHeartbeatScript = "", string sOnExitScript = "");
        int GetFactionEqual(Object oFirstObject, Object oSecondObject = null);
        void ChangeFaction(Object oObjectToChangeFaction, Object oMemberOfFactionToJoin);
        int GetIsListening(Object oObject);
        void SetListening(Object oObject, int bValue);
        void SetListenPattern(Object oObject, string sPattern, int nNumber = 0);
        int TestStringAgainstPattern(string sPattern, string sStringToTest);
        string GetMatchedSubstring(int nString);
        int GetMatchedSubstringsCount();
        Effect EffectVisualEffect(int nVisualEffectId, int nMissEffect = NWScript.FALSE);
        Object GetFactionWeakestMember(Object oFactionMember = null, int bMustBeVisible = NWScript.TRUE);
        Object GetFactionStrongestMember(Object oFactionMember = null, int bMustBeVisible = NWScript.TRUE);
        Object GetFactionMostDamagedMember(Object oFactionMember = null, int bMustBeVisible = NWScript.TRUE);
        Object GetFactionLeastDamagedMember(Object oFactionMember = null, int bMustBeVisible = NWScript.TRUE);
        int GetFactionGold(Object oFactionMember);
        int GetFactionAverageReputation(Object oSourceFactionMember, Object oTarget);
        int GetFactionAverageGoodEvilAlignment(Object oFactionMember);
        int GetFactionAverageLawChaosAlignment(Object oFactionMember);
        int GetFactionAverageLevel(Object oFactionMember);
        int GetFactionAverageXP(Object oFactionMember);
        int GetFactionMostFrequentClass(Object oFactionMember);
        Object GetFactionWorstAC(Object oFactionMember = null, int bMustBeVisible = NWScript.TRUE);
        Object GetFactionBestAC(Object oFactionMember = null, int bMustBeVisible = NWScript.TRUE);
        void ActionSit(Object oChair);
        int GetListenPatternNumber();
        void ActionJumpToObject(Object oToJumpTo, int bWalkStraightLineToPoint = NWScript.TRUE);
        Object GetWaypointByTag(string sWaypointTag);
        Object GetTransitionTarget(Object oTransition);
        Effect EffectLinkEffects(Effect eChildEffect, Effect eParentEffect);
        Object GetObjectByTag(string sTag, int nNth = 0);
        void AdjustAlignment(Object oSubject, int nAlignment, int nShift, int bAllPartyMembers = NWScript.TRUE);
        void ActionWait(float fSeconds);
        void SetAreaTransitionBMP(int nPredefinedAreaTransition, string sCustomAreaTransitionBMP = "");
        void ActionStartConversation(Object oObjectToConverseWith, string sDialogResRef = "", int bPrivateConversation = NWScript.FALSE, int bPlayHello = NWScript.TRUE);
        void ActionPauseConversation();
        void ActionResumeConversation();
        Effect EffectBeam(int nBeamVisualEffect, Object oEffector, int nBodyPart, int bMissEffect = NWScript.FALSE);
        int GetReputation(Object oSource, Object oTarget);
        void AdjustReputation(Object oTarget, Object oSourceFactionMember, int nAdjustment);
        Object GetSittingCreature(Object oChair);
        Object GetGoingToBeAttackedBy(Object oTarget);
        Effect EffectSpellResistanceIncrease(int nValue);
        Location GetLocation(Object oObject);
        void ActionJumpToLocation(Location lLocation);
        Location Location(Object oArea, Vector? vPosition, float fOrientation);
        void ApplyEffectAtLocation(int nDurationType, Effect eEffect, Location lLocation, float fDuration = 0.0f);
        int GetIsPC(Object oCreature);
        float FeetToMeters(float fFeet);
        float YardsToMeters(float fYards);
        void ApplyEffectToObject(int nDurationType, Effect eEffect, Object oTarget, float fDuration = 0.0f);
        void SpeakString(string sStringToSpeak, int nTalkVolume = NWScript.TALKVOLUME_TALK);
        Location GetSpellTargetLocation();
        Vector GetPositionFromLocation(Location lLocation);
        Object GetAreaFromLocation(Location lLocation);
        float GetFacingFromLocation(Location lLocation);
        Object GetNearestCreatureToLocation(int nFirstCriteriaType, int nFirstCriteriaValue, Location lLocation, int nNth = 1, int nSecondCriteriaType = -1, int nSecondCriteriaValue = -1, int nThirdCriteriaType = -1, int nThirdCriteriaValue = -1);
        Object GetNearestObject(int nObjectType = NWScript.OBJECT_TYPE_ALL, Object oTarget = null, int nNth = 1);
        Object GetNearestObjectToLocation(int nObjectType, Location lLocation, int nNth = 1);
        Object GetNearestObjectByTag(string sTag, Object oTarget = null, int nNth = 1);
        float IntToFloat(int nInteger);
        int FloatToInt(float fFloat);
        int StringToInt(string sNumber);
        float StringToFloat(string sNumber);
        void ActionCastSpellAtLocation(int nSpell, Location lTargetLocation, int nMetaMagic = NWScript.METAMAGIC_ANY, int bCheat = NWScript.FALSE, int nProjectilePathType = NWScript.PROJECTILE_PATH_TYPE_DEFAULT, int bInstantSpell = NWScript.FALSE);
        int GetIsEnemy(Object oTarget, Object oSource = null);
        int GetIsFriend(Object oTarget, Object oSource = null);
        int GetIsNeutral(Object oTarget, Object oSource = null);
        Object GetPCSpeaker();
        string GetStringByStrRef(int nStrRef, int nGender = NWScript.GENDER_MALE);
        void ActionSpeakStringByStrRef(int nStrRef, int nTalkVolume = NWScript.TALKVOLUME_TALK);
        void DestroyObject(Object oDestroy, float fDelay = 0.0f);
        Object GetModule();
        Object CreateObject(int nObjectType, string sTemplate, Location lLocation, int bUseAppearAnimation = NWScript.FALSE, string sNewTag = "");
        Event EventSpellCastAt(Object oCaster, int nSpell, int bHarmful = NWScript.TRUE);
        Object GetLastSpellCaster();
        int GetLastSpell();
        int GetUserDefinedEventNumber();
        int GetSpellId();
        string RandomName(int nNameType = NWScript.NAME_FIRST_GENERIC_MALE);
        Effect EffectPoison(int nPoisonType);
        Effect EffectDisease(int nDiseaseType);
        Effect EffectSilence();
        string GetName(Object oObject, int bOriginalName = NWScript.FALSE);
        Object GetLastSpeaker();
        int BeginConversation(string sResRef = "", Object oObjectToDialog = null);
        Object GetLastPerceived();
        int GetLastPerceptionHeard();
        int GetLastPerceptionInaudible();
        int GetLastPerceptionSeen();
        Object GetLastClosedBy();
        int GetLastPerceptionVanished();
        Object GetFirstInPersistentObject(Object oPersistentObject = null, int nResidentObjectType = NWScript.OBJECT_TYPE_CREATURE, int nPersistentZone = NWScript.PERSISTENT_ZONE_ACTIVE);
        Object GetNextInPersistentObject(Object oPersistentObject = null, int nResidentObjectType = NWScript.OBJECT_TYPE_CREATURE, int nPersistentZone = NWScript.PERSISTENT_ZONE_ACTIVE);
        Object GetAreaOfEffectCreator(Object oAreaOfEffectObject = null);
        void DeleteLocalInt(Object oObject, string sVarName);
        void DeleteLocalFloat(Object oObject, string sVarName);
        void DeleteLocalString(Object oObject, string sVarName);
        void DeleteLocalObject(Object oObject, string sVarName);
        void DeleteLocalLocation(Object oObject, string sVarName);
        Effect EffectHaste();
        Effect EffectSlow();
        string ObjectToString(Object oObject);
        Effect EffectImmunity(int nImmunityType);
        int GetIsImmune(Object oCreature, int nImmunityType, Object oVersus = null);
        Effect EffectDamageImmunityIncrease(int nDamageType, int nPercentImmunity);
        int GetEncounterActive(Object oEncounter = null);
        void SetEncounterActive(int nNewValue, Object oEncounter = null);
        int GetEncounterSpawnsMax(Object oEncounter = null);
        void SetEncounterSpawnsMax(int nNewValue, Object oEncounter = null);
        int GetEncounterSpawnsCurrent(Object oEncounter = null);
        void SetEncounterSpawnsCurrent(int nNewValue, Object oEncounter = null);
        Object GetModuleItemAcquired();
        Object GetModuleItemAcquiredFrom();
        void SetCustomToken(int nCustomTokenNumber, string sTokenValue);
        int GetHasFeat(int nFeat, Object oCreature = null);
        int GetHasSkill(int nSkill, Object oCreature = null);
        void ActionUseFeat(int nFeat, Object oTarget);
        void ActionUseSkill(int nSkill, Object oTarget, int nSubSkill = 0, Object oItemUsed = null);
        int GetObjectSeen(Object oTarget, Object oSource = null);
        int GetObjectHeard(Object oTarget, Object oSource = null);
        Object GetLastPlayerDied();
        Object GetModuleItemLost();
        Object GetModuleItemLostBy();
        Event EventConversation();
        void SetEncounterDifficulty(int nEncounterDifficulty, Object oEncounter = null);
        int GetEncounterDifficulty(Object oEncounter = null);
        float GetDistanceBetweenLocations(Location lLocationA, Location lLocationB);
        int GetReflexAdjustedDamage(int nDamage, Object oTarget, int nDC, int nSaveType = NWScript.SAVING_THROW_TYPE_NONE, Object oSaveVersus = null);
        void PlayAnimation(int nAnimation, float fSpeed = 1.0f, float fSeconds = 0.0f);
        Talent TalentSpell(int nSpell);
        Talent TalentFeat(int nFeat);
        Talent TalentSkill(int nSkill);
        int GetHasSpellEffect(int nSpell, Object oObject = null);
        int GetEffectSpellId(Effect eSpellEffect);
        int GetCreatureHasTalent(Talent tTalent, Object oCreature = null);
        Talent GetCreatureTalentRandom(int nCategory, Object oCreature = null);
        Talent GetCreatureTalentBest(int nCategory, int nCRMax, Object oCreature = null);
        void ActionUseTalentOnObject(Talent tChosenTalent, Object oTarget);
        void ActionUseTalentAtLocation(Talent tChosenTalent, Location lTargetLocation);
        int GetGoldPieceValue(Object oItem);
        int GetIsPlayableRacialType(Object oCreature);
        void JumpToLocation(Location lDestination);
        Effect EffectTemporaryHitpoints(int nHitPoints);
        int GetSkillRank(int nSkill, Object oTarget = null, int nBaseSkillRank = NWScript.FALSE);
        Object GetAttackTarget(Object oCreature = null);
        int GetLastAttackType(Object oCreature = null);
        int GetLastAttackMode(Object oCreature = null);
        Object GetMaster(Object oAssociate = null);
        int GetIsInCombat(Object oCreature = null);
        int GetLastAssociateCommand(Object oAssociate = null);
        void GiveGoldToCreature(Object oCreature, int nGP);
        void SetIsDestroyable(int bDestroyable, int bRaiseable = NWScript.TRUE, int bSelectableWhenDead = NWScript.FALSE);
        void SetLocked(Object oTarget, int bLocked);
        int GetLocked(Object oTarget);
        Object GetClickingObject();
        void SetAssociateListenPatterns(Object oTarget = null);
        Object GetLastWeaponUsed(Object oCreature);
        void ActionInteractObject(Object oPlaceable);
        Object GetLastUsedBy();
        int GetAbilityModifier(int nAbility, Object oCreature = null);
        int GetIdentified(Object oItem);
        void SetIdentified(Object oItem, int bIdentified);
        void SummonAnimalCompanion(Object oMaster = null);
        void SummonFamiliar(Object oMaster = null);
        Object GetBlockingDoor();
        int GetIsDoorActionPossible(Object oTargetDoor, int nDoorAction);
        void DoDoorAction(Object oTargetDoor, int nDoorAction);
        Object GetFirstItemInInventory(Object oTarget = null);
        Object GetNextItemInInventory(Object oTarget = null);
        int GetClassByPosition(int nClassPosition, Object oCreature = null);
        int GetLevelByPosition(int nClassPosition, Object oCreature = null);
        int GetLevelByClass(int nClassType, Object oCreature = null);
        int GetDamageDealtByType(int nDamageType);
        int GetTotalDamageDealt();
        Object GetLastDamager(Object oObject = null);
        Object GetLastDisarmed();
        Object GetLastDisturbed();
        Object GetLastLocked();
        Object GetLastUnlocked();
        Effect EffectSkillIncrease(int nSkill, int nValue);
        int GetInventoryDisturbType();
        Object GetInventoryDisturbItem();
        Object GetHenchman(Object oMaster = null, int nNth = 1);
        Effect VersusAlignmentEffect(Effect eEffect, int nLawChaos = NWScript.ALIGNMENT_ALL, int nGoodEvil = NWScript.ALIGNMENT_ALL);
        Effect VersusRacialTypeEffect(Effect eEffect, int nRacialType);
        Effect VersusTrapEffect(Effect eEffect);
        int GetGender(Object oCreature);
        int GetIsTalentValid(Talent tTalent);
        void ActionMoveAwayFromLocation(Location lMoveAwayFrom, int bRun = NWScript.FALSE, float fMoveAwayRange = 40.0f);
        Object GetAttemptedAttackTarget();
        int GetTypeFromTalent(Talent tTalent);
        int GetIdFromTalent(Talent tTalent);
        Object GetAssociate(int nAssociateType, Object oMaster = null, int nTh = 1);
        void AddHenchman(Object oMaster, Object oHenchman = null);
        void RemoveHenchman(Object oMaster, Object oHenchman = null);
        void AddJournalQuestEntry(string szPlotID, int nState, Object oCreature, int bAllPartyMembers = NWScript.TRUE, int bAllPlayers = NWScript.FALSE, int bAllowOverrideHigher = NWScript.FALSE);
        void RemoveJournalQuestEntry(string szPlotID, Object oCreature, int bAllPartyMembers = NWScript.TRUE, int bAllPlayers = NWScript.FALSE);
        string GetPCPublicCDKey(Object oPlayer, int nSinglePlayerCDKey = NWScript.FALSE);
        string GetPCIPAddress(Object oPlayer);
        string GetPCPlayerName(Object oPlayer);
        void SetPCLike(Object oPlayer, Object oTarget);
        void SetPCDislike(Object oPlayer, Object oTarget);
        void SendMessageToPC(Object oPlayer, string szMessage);
        Object GetAttemptedSpellTarget();
        Object GetLastOpenedBy();
        int GetHasSpell(int nSpell, Object oCreature = null);
        void OpenStore(Object oStore, Object oPC, int nBonusMarkUp = 0, int nBonusMarkDown = 0);
        Effect EffectTurned();
        Object GetFirstFactionMember(Object oMemberOfFaction, int bPCOnly = NWScript.TRUE);
        Object GetNextFactionMember(Object oMemberOfFaction, int bPCOnly = NWScript.TRUE);
        void ActionForceMoveToLocation(Location lDestination, int bRun = NWScript.FALSE, float fTimeout = 30.0f);
        void ActionForceMoveToObject(Object oMoveTo, int bRun = NWScript.FALSE, float fRange = 1.0f, float fTimeout = 30.0f);
        int GetJournalQuestExperience(string szPlotID);
        void JumpToObject(Object oToJumpTo, int nWalkStraightLineToPoint = 1);
        void SetMapPinEnabled(Object oMapPin, int nEnabled);
        Effect EffectHitPointChangeWhenDying(float fHitPointChangePerRound);
        void PopUpGUIPanel(Object oPC, int nGUIPanel);
        void ClearPersonalReputation(Object oTarget, Object oSource = null);
        void SetIsTemporaryFriend(Object oTarget, Object oSource = null, int bDecays = NWScript.FALSE, float fDurationInSeconds = 180.0f);
        void SetIsTemporaryEnemy(Object oTarget, Object oSource = null, int bDecays = NWScript.FALSE, float fDurationInSeconds = 180.0f);
        void SetIsTemporaryNeutral(Object oTarget, Object oSource = null, int bDecays = NWScript.FALSE, float fDurationInSeconds = 180.0f);
        void GiveXPToCreature(Object oCreature, int nXpAmount);
        void SetXP(Object oCreature, int nXpAmount);
        int GetXP(Object oCreature);
        string IntToHexString(int nInteger);
        int GetBaseItemType(Object oItem);
        int GetItemHasItemProperty(Object oItem, int nProperty);
        void ActionEquipMostDamagingMelee(Object oVersus = null, int bOffHand = NWScript.FALSE);
        void ActionEquipMostDamagingRanged(Object oVersus = null);
        int GetItemACValue(Object oItem);
        void ActionRest(int bCreatureToEnemyLineOfSightCheck = NWScript.FALSE);
        void ExploreAreaForPlayer(Object oArea, Object oPlayer, int bExplored = NWScript.TRUE);
        void ActionEquipMostEffectiveArmor();
        int GetIsDay();
        int GetIsNight();
        int GetIsDawn();
        int GetIsDusk();
        int GetIsEncounterCreature(Object oCreature = null);
        Object GetLastPlayerDying();
        Location GetStartingLocation();
        void ChangeToStandardFaction(Object oCreatureToChange, int nStandardFaction);
        void SoundObjectPlay(Object oSound);
        void SoundObjectStop(Object oSound);
        void SoundObjectSetVolume(Object oSound, int nVolume);
        void SoundObjectSetPosition(Object oSound, Vector? vPosition);
        void SpeakOneLinerConversation(string sDialogResRef = "", Object oTokenTarget = null);
        int GetGold(Object oTarget = null);
        Object GetLastRespawnButtonPresser();
        int GetIsDM(Object oCreature);
        void PlayVoiceChat(int nVoiceChatID, Object oTarget = null);
        int GetIsWeaponEffective(Object oVersus = null, int bOffHand = NWScript.FALSE);
        int GetLastSpellHarmful();
        Event EventActivateItem(Object oItem, Location lTarget, Object oTarget = null);
        void MusicBackgroundPlay(Object oArea);
        void MusicBackgroundStop(Object oArea);
        void MusicBackgroundSetDelay(Object oArea, int nDelay);
        void MusicBackgroundChangeDay(Object oArea, int nTrack);
        void MusicBackgroundChangeNight(Object oArea, int nTrack);
        void MusicBattlePlay(Object oArea);
        void MusicBattleStop(Object oArea);
        void MusicBattleChange(Object oArea, int nTrack);
        void AmbientSoundPlay(Object oArea);
        void AmbientSoundStop(Object oArea);
        void AmbientSoundChangeDay(Object oArea, int nTrack);
        void AmbientSoundChangeNight(Object oArea, int nTrack);
        Object GetLastKiller();
        Object GetSpellCastItem();
        Object GetItemActivated();
        Object GetItemActivator();
        Location GetItemActivatedTargetLocation();
        Object GetItemActivatedTarget();
        int GetIsOpen(Object oObject);
        void TakeGoldFromCreature(int nAmount, Object oCreatureToTakeFrom, int bDestroy = NWScript.FALSE);
        int IsInConversation(Object oObject);
        Effect EffectAbilityDecrease(int nAbility, int nModifyBy);
        Effect EffectAttackDecrease(int nPenalty, int nModifierType = NWScript.ATTACK_BONUS_MISC);
        Effect EffectDamageDecrease(int nPenalty, int nDamageType = NWScript.DAMAGE_TYPE_MAGICAL);
        Effect EffectDamageImmunityDecrease(int nDamageType, int nPercentImmunity);
        Effect EffectACDecrease(int nValue, int nModifyType = NWScript.AC_DODGE_BONUS, int nDamageType = NWScript.AC_VS_DAMAGE_TYPE_ALL);
        Effect EffectMovementSpeedDecrease(int nPercentChange);
        Effect EffectSavingThrowDecrease(int nSave, int nValue, int nSaveType = NWScript.SAVING_THROW_TYPE_ALL);
        Effect EffectSkillDecrease(int nSkill, int nValue);
        Effect EffectSpellResistanceDecrease(int nValue);
        int GetPlotFlag(Object oTarget = null);
        void SetPlotFlag(Object oTarget, int nPlotFlag);
        Effect EffectInvisibility(int nInvisibilityType);
        Effect EffectConcealment(int nPercentage, int nMissType = NWScript.MISS_CHANCE_TYPE_NORMAL);
        Effect EffectDarkness();
        Effect EffectDispelMagicAll(int nCasterLevel = NWScript.USE_CREATURE_LEVEL);
        Effect EffectUltravision();
        Effect EffectNegativeLevel(int nNumLevels, int bHPBonus = NWScript.FALSE);
        Effect EffectPolymorph(int nPolymorphSelection, int nLocked = NWScript.FALSE);
        Effect EffectSanctuary(int nDifficultyClass);
        Effect EffectTrueSeeing();
        Effect EffectSeeInvisible();
        Effect EffectTimeStop();
        Effect EffectBlindness();
        int GetIsReactionTypeFriendly(Object oTarget, Object oSource = null);
        int GetIsReactionTypeNeutral(Object oTarget, Object oSource = null);
        int GetIsReactionTypeHostile(Object oTarget, Object oSource = null);
        Effect EffectSpellLevelAbsorption(int nMaxSpellLevelAbsorbed, int nTotalSpellLevelsAbsorbed = 0, int nSpellSchool = NWScript.SPELL_SCHOOL_GENERAL);
        Effect EffectDispelMagicBest(int nCasterLevel = NWScript.USE_CREATURE_LEVEL);
        void ActivatePortal(Object oTarget, string sIPaddress = "", string sPassword = "", string sWaypointTag = "", int bSeemless = NWScript.FALSE);
        int GetNumStackedItems(Object oItem);
        void SurrenderToEnemies();
        Effect EffectMissChance(int nPercentage, int nMissChanceType = NWScript.MISS_CHANCE_TYPE_NORMAL);
        int GetTurnResistanceHD(Object oUndead = null);
        int GetCreatureSize(Object oCreature);
        Effect EffectDisappearAppear(Location lLocation, int nAnimation = 1);
        Effect EffectDisappear(int nAnimation = 1);
        Effect EffectAppear(int nAnimation = 1);
        void ActionUnlockObject(Object oTarget);
        void ActionLockObject(Object oTarget);
        Effect EffectModifyAttacks(int nAttacks);
        Object GetLastTrapDetected(Object oTarget = null);
        Effect EffectDamageShield(int nDamageAmount, int nRandomAmount, int nDamageType);
        Object GetNearestTrapToObject(Object oTarget = null, int nTrapDetected = NWScript.TRUE);
        string GetDeity(Object oCreature);
        string GetSubRace(Object oTarget);
        int GetFortitudeSavingThrow(Object oTarget);
        int GetWillSavingThrow(Object oTarget);
        int GetReflexSavingThrow(Object oTarget);
        float GetChallengeRating(Object oCreature);
        int GetAge(Object oCreature);
        int GetMovementRate(Object oCreature);
        int GetFamiliarCreatureType(Object oCreature);
        int GetAnimalCompanionCreatureType(Object oCreature);
        string GetFamiliarName(Object oCreature);
        string GetAnimalCompanionName(Object oTarget);
        void ActionCastFakeSpellAtObject(int nSpell, Object oTarget, int nProjectilePathType = NWScript.PROJECTILE_PATH_TYPE_DEFAULT);
        void ActionCastFakeSpellAtLocation(int nSpell, Location lTarget, int nProjectilePathType = NWScript.PROJECTILE_PATH_TYPE_DEFAULT);
        void RemoveSummonedAssociate(Object oMaster, Object oAssociate = null);
        void SetCameraMode(Object oPlayer, int nCameraMode);
        int GetIsResting(Object oCreature = null);
        Object GetLastPCRested();
        void SetWeather(Object oTarget, int nWeather);
        int GetLastRestEventType();
        void StartNewModule(string sModuleName);
        Effect EffectSwarm(int nLooping, string sCreatureTemplate1, string sCreatureTemplate2 = "", string sCreatureTemplate3 = "", string sCreatureTemplate4 = "");
        int GetWeaponRanged(Object oItem);
        void DoSinglePlayerAutoSave();
        int GetGameDifficulty();
        void SetTileMainLightColor(Location lTileLocation, int nMainLight1Color, int nMainLight2Color);
        void SetTileSourceLightColor(Location lTileLocation, int nSourceLight1Color, int nSourceLight2Color);
        void RecomputeLighting(Object oArea);
        int GetTileMainLight1Color(Location lTile);
        int GetTileMainLight2Color(Location lTile);
        int GetTileSourceLight1Color(Location lTile);
        int GetTileSourceLight2Color(Location lTile);
        void SetPanelButtonFlash(Object oPlayer, int nButton, int nEnableFlash);
        int GetCurrentAction(Object oObject = null);
        void SetStandardFactionReputation(int nStandardFaction, int nNewReputation, Object oCreature = null);
        int GetStandardFactionReputation(int nStandardFaction, Object oCreature = null);
        void FloatingTextStrRefOnCreature(int nStrRefToDisplay, Object oCreatureToFloatAbove, int bBroadcastToFaction = NWScript.TRUE);
        void FloatingTextStringOnCreature(string sStringToDisplay, Object oCreatureToFloatAbove, int bBroadcastToFaction = NWScript.TRUE);
        int GetTrapDisarmable(Object oTrapObject);
        int GetTrapDetectable(Object oTrapObject);
        int GetTrapDetectedBy(Object oTrapObject, Object oCreature);
        int GetTrapFlagged(Object oTrapObject);
        int GetTrapBaseType(Object oTrapObject);
        int GetTrapOneShot(Object oTrapObject);
        Object GetTrapCreator(Object oTrapObject);
        string GetTrapKeyTag(Object oTrapObject);
        int GetTrapDisarmDC(Object oTrapObject);
        int GetTrapDetectDC(Object oTrapObject);
        int GetLockKeyRequired(Object oObject);
        string GetLockKeyTag(Object oObject);
        int GetLockLockable(Object oObject);
        int GetLockUnlockDC(Object oObject);
        int GetLockLockDC(Object oObject);
        Object GetPCLevellingUp();
        int GetHasFeatEffect(int nFeat, Object oObject = null);
        void SetPlaceableIllumination(Object oPlaceable = null, int bIlluminate = NWScript.TRUE);
        int GetPlaceableIllumination(Object oPlaceable = null);
        int GetIsPlaceableObjectActionPossible(Object oPlaceable, int nPlaceableAction);
        void DoPlaceableObjectAction(Object oPlaceable, int nPlaceableAction);
        Object GetFirstPC();
        Object GetNextPC();
        int SetTrapDetectedBy(Object oTrap, Object oDetector, int bDetected = NWScript.TRUE);
        int GetIsTrapped(Object oObject);
        Effect EffectTurnResistanceDecrease(int nHitDice);
        Effect EffectTurnResistanceIncrease(int nHitDice);
        void PopUpDeathGUIPanel(Object oPC, int bRespawnButtonEnabled = NWScript.TRUE, int bWaitForHelpButtonEnabled = NWScript.TRUE, int nHelpStringReference = 0, string sHelpString = "");
        void SetTrapDisabled(Object oTrap);
        Object GetLastHostileActor(Object oVictim = null);
        void ExportAllCharacters();
        int MusicBackgroundGetDayTrack(Object oArea);
        int MusicBackgroundGetNightTrack(Object oArea);
        void WriteTimestampedLogEntry(string sLogEntry);
        string GetModuleName();
        Object GetFactionLeader(Object oMemberOfFaction);
        void SendMessageToAllDMs(string szMessage);
        void EndGame(string sEndMovie);
        void BootPC(Object oPlayer, string sReason = "");
        void ActionCounterSpell(Object oCounterSpellTarget);
        void AmbientSoundSetDayVolume(Object oArea, int nVolume);
        void AmbientSoundSetNightVolume(Object oArea, int nVolume);
        int MusicBackgroundGetBattleTrack(Object oArea);
        int GetHasInventory(Object oObject);
        float GetStrRefSoundDuration(int nStrRef);
        void AddToParty(Object oPC, Object oPartyLeader);
        void RemoveFromParty(Object oPC);
        int GetStealthMode(Object oCreature);
        int GetDetectMode(Object oCreature);
        int GetDefensiveCastingMode(Object oCreature);
        int GetAppearanceType(Object oCreature);
        void SpawnScriptDebugger();
        int GetModuleItemAcquiredStackSize();
        void DecrementRemainingFeatUses(Object oCreature, int nFeat);
        void DecrementRemainingSpellUses(Object oCreature, int nSpell);
        string GetResRef(Object oObject);
        Effect EffectPetrify();
        Object CopyItem(Object oItem, Object oTargetInventory = null, int bCopyVars = NWScript.FALSE);
        Effect EffectCutsceneParalyze();
        int GetDroppableFlag(Object oItem);
        int GetUseableFlag(Object oObject = null);
        int GetStolenFlag(Object oStolen);
        void SetCampaignFloat(string sCampaignName, string sVarName, float flFloat, Object oPlayer = null);
        void SetCampaignInt(string sCampaignName, string sVarName, int nInt, Object oPlayer = null);
        void SetCampaignVector(string sCampaignName, string sVarName, Vector? vVector, Object oPlayer = null);
        void SetCampaignLocation(string sCampaignName, string sVarName, Location locLocation, Object oPlayer = null);
        void SetCampaignString(string sCampaignName, string sVarName, string sString, Object oPlayer = null);
        void DestroyCampaignDatabase(string sCampaignName);
        float GetCampaignFloat(string sCampaignName, string sVarName, Object oPlayer = null);
        int GetCampaignInt(string sCampaignName, string sVarName, Object oPlayer = null);
        Vector GetCampaignVector(string sCampaignName, string sVarName, Object oPlayer = null);
        Location GetCampaignLocation(string sCampaignName, string sVarName, Object oPlayer = null);
        string GetCampaignString(string sCampaignName, string sVarName, Object oPlayer = null);
        Object CopyObject(Object oSource, Location locLocation, Object oOwner = null, string sNewTag = "");
        void DeleteCampaignVariable(string sCampaignName, string sVarName, Object oPlayer = null);
        int StoreCampaignObject(string sCampaignName, string sVarName, Object oObject, Object oPlayer = null);
        Object RetrieveCampaignObject(string sCampaignName, string sVarName, Location locLocation, Object oOwner = null, Object oPlayer = null);
        Effect EffectCutsceneDominated();
        int GetItemStackSize(Object oItem);
        void SetItemStackSize(Object oItem, int nSize);
        int GetItemCharges(Object oItem);
        void SetItemCharges(Object oItem, int nCharges);
        void AddItemProperty(int nDurationType, ItemProperty ipProperty, Object oItem, float fDuration = 0.0f);
        void RemoveItemProperty(Object oItem, ItemProperty ipProperty);
        int GetIsItemPropertyValid(ItemProperty ipProperty);
        ItemProperty GetFirstItemProperty(Object oItem);
        ItemProperty GetNextItemProperty(Object oItem);
        int GetItemPropertyType(ItemProperty ip);
        int GetItemPropertyDurationType(ItemProperty ip);
        ItemProperty ItemPropertyAbilityBonus(int nAbility, int nBonus);
        ItemProperty ItemPropertyACBonus(int nBonus);
        ItemProperty ItemPropertyACBonusVsAlign(int nAlignGroup, int nACBonus);
        ItemProperty ItemPropertyACBonusVsDmgType(int nDamageType, int nACBonus);
        ItemProperty ItemPropertyACBonusVsRace(int nRace, int nACBonus);
        ItemProperty ItemPropertyACBonusVsSAlign(int nAlign, int nACBonus);
        ItemProperty ItemPropertyEnhancementBonus(int nEnhancementBonus);
        ItemProperty ItemPropertyEnhancementBonusVsAlign(int nAlignGroup, int nBonus);
        ItemProperty ItemPropertyEnhancementBonusVsRace(int nRace, int nBonus);
        ItemProperty ItemPropertyEnhancementBonusVsSAlign(int nAlign, int nBonus);
        ItemProperty ItemPropertyEnhancementPenalty(int nPenalty);
        ItemProperty ItemPropertyWeightReduction(int nReduction);
        ItemProperty ItemPropertyBonusFeat(int nFeat);
        ItemProperty ItemPropertyBonusLevelSpell(int nClass, int nSpellLevel);
        ItemProperty ItemPropertyCastSpell(int nSpell, int nNumUses);
        ItemProperty ItemPropertyDamageBonus(int nDamageType, int nDamage);
        ItemProperty ItemPropertyDamageBonusVsAlign(int nAlignGroup, int nDamageType, int nDamage);
        ItemProperty ItemPropertyDamageBonusVsRace(int nRace, int nDamageType, int nDamage);
        ItemProperty ItemPropertyDamageBonusVsSAlign(int nAlign, int nDamageType, int nDamage);
        ItemProperty ItemPropertyDamageImmunity(int nDamageType, int nImmuneBonus);
        ItemProperty ItemPropertyDamagePenalty(int nPenalty);
        ItemProperty ItemPropertyDamageReduction(int nEnhancement, int nHPSoak);
        ItemProperty ItemPropertyDamageResistance(int nDamageType, int nHPResist);
        ItemProperty ItemPropertyDamageVulnerability(int nDamageType, int nVulnerability);
        ItemProperty ItemPropertyDarkvision();
        ItemProperty ItemPropertyDecreaseAbility(int nAbility, int nModifier);
        ItemProperty ItemPropertyDecreaseAC(int nModifierType, int nPenalty);
        ItemProperty ItemPropertyDecreaseSkill(int nSkill, int nPenalty);
        ItemProperty ItemPropertyContainerReducedWeight(int nContainerType);
        ItemProperty ItemPropertyExtraMeleeDamageType(int nDamageType);
        ItemProperty ItemPropertyExtraRangeDamageType(int nDamageType);
        ItemProperty ItemPropertyHaste();
        ItemProperty ItemPropertyHolyAvenger();
        ItemProperty ItemPropertyImmunityMisc(int nImmunityType);
        ItemProperty ItemPropertyImprovedEvasion();
        ItemProperty ItemPropertyBonusSpellResistance(int nBonus);
        ItemProperty ItemPropertyBonusSavingThrowVsX(int nBonusType, int nBonus);
        ItemProperty ItemPropertyBonusSavingThrow(int nBaseSaveType, int nBonus);
        ItemProperty ItemPropertyKeen();
        ItemProperty ItemPropertyLight(int nBrightness, int nColor);
        ItemProperty ItemPropertyMaxRangeStrengthMod(int nModifier);
        ItemProperty ItemPropertyNoDamage();
        ItemProperty ItemPropertyOnHitProps(int nProperty, int nSaveDC, int nSpecial = 0);
        ItemProperty ItemPropertyReducedSavingThrowVsX(int nBaseSaveType, int nPenalty);
        ItemProperty ItemPropertyReducedSavingThrow(int nBonusType, int nPenalty);
        ItemProperty ItemPropertyRegeneration(int nRegenAmount);
        ItemProperty ItemPropertySkillBonus(int nSkill, int nBonus);
        ItemProperty ItemPropertySpellImmunitySpecific(int nSpell);
        ItemProperty ItemPropertySpellImmunitySchool(int nSchool);
        ItemProperty ItemPropertyThievesTools(int nModifier);
        ItemProperty ItemPropertyAttackBonus(int nBonus);
        ItemProperty ItemPropertyAttackBonusVsAlign(int nAlignGroup, int nBonus);
        ItemProperty ItemPropertyAttackBonusVsRace(int nRace, int nBonus);
        ItemProperty ItemPropertyAttackBonusVsSAlign(int nAlignment, int nBonus);
        ItemProperty ItemPropertyAttackPenalty(int nPenalty);
        ItemProperty ItemPropertyUnlimitedAmmo(int nAmmoDamage = NWScript.IP_CONST_UNLIMITEDAMMO_BASIC);
        ItemProperty ItemPropertyLimitUseByAlign(int nAlignGroup);
        ItemProperty ItemPropertyLimitUseByClass(int nClass);
        ItemProperty ItemPropertyLimitUseByRace(int nRace);
        ItemProperty ItemPropertyLimitUseBySAlign(int nAlignment);
        ItemProperty BadBadReplaceMeThisDoesNothing();
        ItemProperty ItemPropertyVampiricRegeneration(int nRegenAmount);
        ItemProperty ItemPropertyTrap(int nTrapLevel, int nTrapType);
        ItemProperty ItemPropertyTrueSeeing();
        ItemProperty ItemPropertyOnMonsterHitProperties(int nProperty, int nSpecial = 0);
        ItemProperty ItemPropertyTurnResistance(int nModifier);
        ItemProperty ItemPropertyMassiveCritical(int nDamage);
        ItemProperty ItemPropertyFreeAction();
        ItemProperty ItemPropertyMonsterDamage(int nDamage);
        ItemProperty ItemPropertyImmunityToSpellLevel(int nLevel);
        ItemProperty ItemPropertySpecialWalk(int nWalkType = 0);
        ItemProperty ItemPropertyHealersKit(int nModifier);
        ItemProperty ItemPropertyWeightIncrease(int nWeight);
        int GetIsSkillSuccessful(Object oTarget, int nSkill, int nDifficulty);
        Effect EffectSpellFailure(int nPercent = 100, int nSpellSchool = NWScript.SPELL_SCHOOL_GENERAL);
        void SpeakStringByStrRef(int nStrRef, int nTalkVolume = NWScript.TALKVOLUME_TALK);
        void SetCutsceneMode(Object oCreature, int nInCutscene = NWScript.TRUE, int nLeftClickingEnabled = NWScript.FALSE);
        Object GetLastPCToCancelCutscene();
        float GetDialogSoundLength(int nStrRef);
        void FadeFromBlack(Object oCreature, float fSpeed = NWScript.FADE_SPEED_MEDIUM);
        void FadeToBlack(Object oCreature, float fSpeed = NWScript.FADE_SPEED_MEDIUM);
        void StopFade(Object oCreature);
        void BlackScreen(Object oCreature);
        int GetBaseAttackBonus(Object oCreature);
        void SetImmortal(Object oCreature, int bImmortal);
        void OpenInventory(Object oCreature, Object oPlayer);
        void StoreCameraFacing();
        void RestoreCameraFacing();
        int LevelUpHenchman(Object oCreature, int nClass = NWScript.CLASS_TYPE_INVALID, int bReadyAllSpells = NWScript.FALSE, int nPackage = NWScript.PACKAGE_INVALID);
        void SetDroppableFlag(Object oItem, int bDroppable);
        int GetWeight(Object oTarget = null);
        Object GetModuleItemAcquiredBy();
        int GetImmortal(Object oTarget = null);
        void DoWhirlwindAttack(int bDisplayFeedback = NWScript.TRUE, int bImproved = NWScript.FALSE);
        string Get2DAString(string s2DA, string sColumn, int nRow);
        Effect EffectEthereal();
        int GetAILevel(Object oTarget = null);
        void SetAILevel(Object oTarget, int nAILevel);
        int GetIsPossessedFamiliar(Object oCreature);
        void UnpossessFamiliar(Object oCreature);
        int GetIsAreaInterior(Object oArea = null);
        void SendMessageToPCByStrRef(Object oPlayer, int nStrRef);
        void IncrementRemainingFeatUses(Object oCreature, int nFeat);
        void ExportSingleCharacter(Object oPlayer);
        void PlaySoundByStrRef(int nStrRef, int nRunAsAction = NWScript.TRUE);
        void SetSubRace(Object oCreature, string sSubRace);
        void SetDeity(Object oCreature, string sDeity);
        int GetIsDMPossessed(Object oCreature);
        int GetWeather(Object oArea);
        int GetIsAreaNatural(Object oArea);
        int GetIsAreaAboveGround(Object oArea);
        Object GetPCItemLastEquipped();
        Object GetPCItemLastEquippedBy();
        Object GetPCItemLastUnequipped();
        Object GetPCItemLastUnequippedBy();
        Object CopyItemAndModify(Object oItem, int nType, int nIndex, int nNewValue, int bCopyVars = NWScript.FALSE);
        int GetItemAppearance(Object oItem, int nType, int nIndex);
        ItemProperty ItemPropertyOnHitCastSpell(int nSpell, int nLevel);
        int GetItemPropertySubType(ItemProperty iProperty);
        int GetActionMode(Object oCreature, int nMode);
        void SetActionMode(Object oCreature, int nMode, int nStatus);
        int GetArcaneSpellFailure(Object oCreature);
        void ActionExamine(Object oExamine);
        ItemProperty ItemPropertyVisualEffect(int nEffect);
        void SetLootable(Object oCreature, int bLootable);
        int GetLootable(Object oCreature);
        float GetCutsceneCameraMoveRate(Object oCreature);
        void SetCutsceneCameraMoveRate(Object oCreature, float fRate);
        int GetItemCursedFlag(Object oItem);
        void SetItemCursedFlag(Object oItem, int nCursed);
        void SetMaxHenchmen(int nNumHenchmen);
        int GetMaxHenchmen();
        int GetAssociateType(Object oAssociate);
        int GetSpellResistance(Object oCreature);
        void DayToNight(Object oPlayer, float fTransitionTime = 0.0f);
        void NightToDay(Object oPlayer, float fTransitionTime = 0.0f);
        int LineOfSightObject(Object oSource, Object oTarget);
        int LineOfSightVector(Vector? vSource, Vector? vTarget);
        int GetLastSpellCastClass();
        void SetBaseAttackBonus(int nBaseAttackBonus, Object oCreature = null);
        void RestoreBaseAttackBonus(Object oCreature = null);
        Effect EffectCutsceneGhost();
        ItemProperty ItemPropertyArcaneSpellFailure(int nModLevel);
        int GetStoreGold(Object oidStore);
        void SetStoreGold(Object oidStore, int nGold);
        int GetStoreMaxBuyPrice(Object oidStore);
        void SetStoreMaxBuyPrice(Object oidStore, int nMaxBuy);
        int GetStoreIdentifyCost(Object oidStore);
        void SetStoreIdentifyCost(Object oidStore, int nCost);
        void SetCreatureAppearanceType(Object oCreature, int nAppearanceType);
        int GetCreatureStartingPackage(Object oCreature);
        Effect EffectCutsceneImmobilize();
        int GetIsInSubArea(Object oCreature, Object oSubArea = null);
        int GetItemPropertyCostTable(ItemProperty iProp);
        int GetItemPropertyCostTableValue(ItemProperty iProp);
        int GetItemPropertyParam1(ItemProperty iProp);
        int GetItemPropertyParam1Value(ItemProperty iProp);
        int GetIsCreatureDisarmable(Object oCreature);
        void SetStolenFlag(Object oItem, int nStolenFlag);
        void ForceRest(Object oCreature);
        void SetCameraHeight(Object oPlayer, float fHeight = 0.0f);
        void SetSkyBox(int nSkyBox, Object oArea = null);
        int GetPhenoType(Object oCreature);
        void SetPhenoType(int nPhenoType, Object oCreature = null);
        void SetFogColor(int nFogType, int nFogColor, Object oArea = null);
        int GetCutsceneMode(Object oCreature = null);
        int GetSkyBox(Object oArea = null);
        int GetFogColor(int nFogType, Object oArea = null);
        void SetFogAmount(int nFogType, int nFogAmount, Object oArea = null);
        int GetFogAmount(int nFogType, Object oArea = null);
        int GetPickpocketableFlag(Object oItem);
        void SetPickpocketableFlag(Object oItem, int bPickpocketable);
        int GetFootstepType(Object oCreature = null);
        void SetFootstepType(int nFootstepType, Object oCreature = null);
        int GetCreatureWingType(Object oCreature = null);
        void SetCreatureWingType(int nWingType, Object oCreature = null);
        int GetCreatureBodyPart(int nPart, Object oCreature = null);
        void SetCreatureBodyPart(int nPart, int nModelNumber, Object oCreature = null);
        int GetCreatureTailType(Object oCreature = null);
        void SetCreatureTailType(int nTailType, Object oCreature = null);
        int GetHardness(Object oObject = null);
        void SetHardness(int nHardness, Object oObject = null);
        void SetLockKeyRequired(Object oObject, int nKeyRequired = NWScript.TRUE);
        void SetLockKeyTag(Object oObject, string sNewKeyTag);
        void SetLockLockable(Object oObject, int nLockable = NWScript.TRUE);
        void SetLockUnlockDC(Object oObject, int nNewUnlockDC);
        void SetLockLockDC(Object oObject, int nNewLockDC);
        void SetTrapDisarmable(Object oTrapObject, int nDisarmable = NWScript.TRUE);
        void SetTrapDetectable(Object oTrapObject, int nDetectable = NWScript.TRUE);
        void SetTrapOneShot(Object oTrapObject, int nOneShot = NWScript.TRUE);
        void SetTrapKeyTag(Object oTrapObject, string sKeyTag);
        void SetTrapDisarmDC(Object oTrapObject, int nDisarmDC);
        void SetTrapDetectDC(Object oTrapObject, int nDetectDC);
        Object CreateTrapAtLocation(int nTrapType, Location lLocation, float fSize = 2.0f, string sTag = "", int nFaction = NWScript.STANDARD_FACTION_HOSTILE, string sOnDisarmScript = "", string sOnTrapTriggeredScript = "");
        void CreateTrapOnObject(int nTrapType, Object oObject, int nFaction = NWScript.STANDARD_FACTION_HOSTILE, string sOnDisarmScript = "", string sOnTrapTriggeredScript = "");
        void SetWillSavingThrow(Object oObject, int nWillSave);
        void SetReflexSavingThrow(Object oObject, int nReflexSave);
        void SetFortitudeSavingThrow(Object oObject, int nFortitudeSave);
        string GetTilesetResRef(Object oArea);
        int GetTrapRecoverable(Object oTrapObject);
        void SetTrapRecoverable(Object oTrapObject, int nRecoverable = NWScript.TRUE);
        int GetModuleXPScale();
        void SetModuleXPScale(int nXPScale);
        string GetKeyRequiredFeedback(Object oObject);
        void SetKeyRequiredFeedback(Object oObject, string sFeedbackMessage);
        int GetTrapActive(Object oTrapObject);
        void SetTrapActive(Object oTrapObject, int nActive = NWScript.TRUE);
        void LockCameraPitch(Object oPlayer, int bLocked = NWScript.TRUE);
        void LockCameraDistance(Object oPlayer, int bLocked = NWScript.TRUE);
        void LockCameraDirection(Object oPlayer, int bLocked = NWScript.TRUE);
        Object GetPlaceableLastClickedBy();
        int GetInfiniteFlag(Object oItem);
        void SetInfiniteFlag(Object oItem, int bInfinite = NWScript.TRUE);
        int GetAreaSize(int nAreaDimension, Object oArea = null);
        void SetName(Object oObject, string sNewName = "");
        int GetPortraitId(Object oTarget = null);
        void SetPortraitId(Object oTarget, int nPortraitId);
        string GetPortraitResRef(Object oTarget = null);
        void SetPortraitResRef(Object oTarget, string sPortraitResRef);
        void SetUseableFlag(Object oPlaceable, int nUseableFlag);
        string GetDescription(Object oObject, int bOriginalDescription = NWScript.FALSE, int bIdentifiedDescription = NWScript.TRUE);
        void SetDescription(Object oObject, string sNewDescription = "", int bIdentifiedDescription = NWScript.TRUE);
        Object GetPCChatSpeaker();
        string GetPCChatMessage();
        int GetPCChatVolume();
        void SetPCChatMessage(string sNewChatMessage = "");
        void SetPCChatVolume(int nTalkVolume = NWScript.TALKVOLUME_TALK);
        int GetColor(Object oObject, int nColorChannel);
        void SetColor(Object oObject, int nColorChannel, int nColorValue);
        ItemProperty ItemPropertyMaterial(int nMaterialType);
        ItemProperty ItemPropertyQuality(int nQuality);
        ItemProperty ItemPropertyAdditional(int nAdditionalProperty);
        void SetTag(Object oObject, string sNewTag);
        string GetEffectTag(Effect eEffect);
        Effect TagEffect(Effect eEffect, string sNewTag);
        int GetEffectCasterLevel(Effect eEffect);
        int GetEffectDuration(Effect eEffect);
        int GetEffectDurationRemaining(Effect eEffect);
        string GetItemPropertyTag(ItemProperty nProperty);
        ItemProperty TagItemProperty(ItemProperty nProperty, string sNewTag);
        int GetItemPropertyDuration(ItemProperty nProperty);
        int GetItemPropertyDurationRemaining(ItemProperty nProperty);
        Object CreateArea(string sResRef, string sNewTag = "", string sNewName = "");
        int DestroyArea(Object oArea);
        Object CopyArea(Object oArea);
        Object GetFirstArea();
        Object GetNextArea();
        void SetTransitionTarget(Object oTransition, Object oTarget);
        void SetHiddenWhenEquipped(Object oItem, int nValue);
        int GetHiddenWhenEquipped(Object oItem);
        int SetTileExplored(Object creature, Object area, int x, int y, int newState);
        int GetTileExplored(Object creature, Object area, int x, int y);
        int SetCreatureExploresMinimap(Object creature, int newState);
        int GetCreatureExploresMinimap(Object creature);
        int GetSurfaceMaterial(Location at);
        float GetGroundHeight(Location at);
        int GetAttackBonusLimit();
        int GetDamageBonusLimit();
        int GetSavingThrowBonusLimit();
        int GetAbilityBonusLimit();
        int GetAbilityPenaltyLimit();
        int GetSkillBonusLimit();
        void SetAttackBonusLimit(int nNewLimit);
        void SetDamageBonusLimit(int nNewLimit);
        void SetSavingThrowBonusLimit(int nNewLimit);
        void SetAbilityBonusLimit(int nNewLimit);
        void SetAbilityPenaltyLimit(int nNewLimit);
        void SetSkillBonusLimit(int nNewLimit);
        int GetIsPlayerConnectionRelayed(Object oPlayer);
        string GetEventScript(Object oObject, int nHandler);
        int SetEventScript(Object oObject, int nHandler, string sScript);
    }
}